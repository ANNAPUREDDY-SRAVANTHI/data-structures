#include<stdio.h>
#include<stdlib.h>
#include<malloc.h>
struct node
{
    int data;
    struct node *next;
}
*head=NULL,*p,*t,*newnode;
void create()
{
    int n,i,ele;
    printf("Enter the n:");
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
        printf("Enter the value:");
        scanf("%d",&ele);
        newnode=(struct node*)malloc(sizeof(struct node));
        newnode->data=ele;
        newnode->next=NULL;
        if(head==NULL)
        {
            head=newnode;
            p=newnode;
        }
        else
        {
            for(p=head;p->next!=NULL;p=p->next);
            p->next=newnode;
            p=newnode;
        }
    }
}
void display()
{
    if(head==NULL)
    printf("Linked list is empty");
    else
    for(p=head;p!=NULL;p=p->next)
    printf("%d->",p->data);
}
 void insert_at_begin()
     {
         int ele;
         printf("enter the element");
         scanf("%d",&ele);
         newnode=(struct node*)malloc(sizeof(struct node));
         newnode->data=ele;
         newnode->next=NULL;
         p=head;
         head=newnode;
         newnode->next=p;
         p=newnode;
      }
int main()
{
    int cho;
    do
    {
        printf("main menu\n");
        printf("1)create\n2)display\n3)insert_at_begin\n");
        printf("Enter the operation:");
        scanf("%d",&cho);
        switch(cho)
        {
            case 1:create();break;
            case 2:display();break;
            case 3:insert_at_begin();break;
            case 4:exit(0);
            default:printf("throw 1 to 4");
        }
    }
    while(cho>=1 && cho<=4);
    return 0;
}
